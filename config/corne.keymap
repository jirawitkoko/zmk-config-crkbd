/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB    &kp Q           &kp W           &kp F         &kp P             &kp B        &kp J      &kp L              &kp U        &kp Y            &kp SQT          &kp BSPC
&kp LCTRL  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S   &mt LEFT_SHIFT T  &kp G        &kp M      &mt RIGHT_SHIFT N  &mt RCTRL E  &mt RIGHT_ALT I  &mt RIGHT_GUI O  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C         &kp D             &kp V        &kp K      &kp H              &kp COMMA    &kp DOT          &kp FSLH         &kp ESC
                                           &lt 4 ESCAPE  &lt 1 SPACE       &lt 1 TAB    &lt 5 RET  &lt 2 BACKSPACE    &lt 3 DEL
            >;
        };

        NAV {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    |BTCLR|     | SPC |   | ENT |     | ALT |

            label = "NAV";
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans    &trans    &kp K_PASTE    &kp K_COPY  &kp K_CUT     &kp K_UNDO  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp CAPS  &kp LEFT       &kp DOWN    &kp UP_ARROW  &kp RIGHT   &trans
&trans  &trans        &trans        &trans     &trans          &trans    &trans    &trans         &trans      &trans        &trans      &trans
                                    &trans     &trans          &trans    &kp RET   &kp BACKSPACE  &kp DEL
            >;
        };

        NUM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "NUM";
            bindings = <
&kp TAB    &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans           &trans     &trans         &trans         &trans
&kp LCTRL  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &trans
&kp LSHFT  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans           &trans     &trans         &trans         &trans
                              &kp DOT  &kp N0  &kp MINUS    &trans  &trans           &trans
            >;
        };

        FUN {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "FUN";
        };

        MEDIA {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans
                        &trans  &trans  &trans    &trans       &trans        &trans
            >;

            label = "MEDIA";
        };

        SYM {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE        &trans            &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR     &kp CARET             &kp PLUS               &trans            &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp TILDE       &kp EXCL       &kp AT_SIGN           &kp HASH               &kp PIPE          &trans  &trans     &trans     &trans    &trans    &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &trans  &trans     &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
